on: [push]

name: CI

jobs:
  build_and_deploy:
    name: Rust project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: jetli/wasm-pack-action@v0.3.0
        with:
          version: 'latest'
    
      - run: wasm-pack build blur
      - run: wasm-pack build canny
      - run: wasm-pack build cartoonify
      - run: wasm-pack build desaturate
      - run: wasm-pack build dramatic
      - run: wasm-pack build exif
      - run: wasm-pack build photon-filters
      - run: wasm-pack build resize
      - run: wasm-pack build rotate
      - run: wasm-pack build sepia

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Install npm dependencies
        run: npm ci
        working-directory: blur
      - name: Install npm dependencies
        run: npm ci
        working-directory: canny
      - name: Install npm dependencies
        run: npm ci
        working-directory: cartoonify
      - name: Install npm dependencies
        run: npm ci
        working-directory: dramatic
      - name: Install npm dependencies
        run: npm ci
        working-directory: desaturate
      - name: Install npm dependencies
        run: npm ci
        working-directory: exif
      - name: Install npm dependencies
        run: npm ci
        working-directory: resize
      - name: Install npm dependencies
        run: npm ci
        working-directory: photon-filters
      - name: Install npm dependencies
        run: npm ci
        working-directory: rotate
      - name: Install npm dependencies
        run: npm ci
        working-directory: sepia
      - name: Build blur app
        run: NODE_ENV=production npm run build --if-present
        working-directory: blur
      - name: Build canny app
        run: NODE_ENV=production npm run build --if-present
        working-directory: canny
      - name: Build cartoonify app
        run: NODE_ENV=production npm run build --if-present
        working-directory: cartoonify
      - name: Build desaturate app
        run: NODE_ENV=production npm run build --if-present
        working-directory: desaturate
      - name: Build dramatic app
        run: NODE_ENV=production npm run build --if-present
        working-directory: dramatic
      - name: Build exif app
        run: NODE_ENV=production npm run build --if-present
        working-directory: exif
      - name: Build photon-filters app
        run: NODE_ENV=production npm run build --if-present
        working-directory: photon-filters
      - name: Build resize app
        run: NODE_ENV=production npm run build --if-present
        working-directory: resize
      - name: Build rotate app
        run: NODE_ENV=production npm run build --if-present
        working-directory: rotate
      - name: Build sepia app
        run: NODE_ENV=production npm run build --if-present
        working-directory: sepia
      - run: mkdir -p public/
      - run: mv ./blur/dist ./public/blur
      - run: mv ./canny/dist ./public/canny
      - run: mv ./cartoonify/dist ./public/cartoonify
      - run: mv ./desaturate/dist ./public/desaturate
      - run: mv ./dramatic/dist ./public/dramatic
      - run: mv ./exif/dist ./public/exif
      - run: mv ./resize/dist ./public/resize
      - run: mv ./photon-filters/dist ./public/photon-filters
      - run: mv ./rotate/dist ./public/rotate
      - run: mv ./sepia/dist ./public/sepia
      - run: cp importmap.json public/
      - run: cp plugins.json public/
      - run: ls public/

      - name: Deploy Documentation
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./public
          keep_files: true
